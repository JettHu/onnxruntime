resources:
  repositories:
  - repository: manylinux # The name used to reference this repository in the checkout step
    type: Github
    endpoint: Microsoft
    name: pypa/manylinux
    ref: a8099af1b3e25f0489717ad9c4f9a2e25a8c5b36

jobs:
- job: Linux_Build
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: Linux-CPU-2019
  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: NodeTool@0
    inputs:
      versionSpec: '12.16.3'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
      addToPath: true

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.manylinux2014_cpu
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuild

  - script: |
     docker save onnxruntimecpubuild > onnxruntimecpubuild.tar
    displayName: save docker image

  - task: AzureKeyVault@2
    inputs:
      connectedServiceName: 'AIInfraBuild'
      KeyVaultName: 'zhanyi-cache-test'
      SecretsFilter: 'zhanyi-conn-string'
      RunAsPreJob: false

  - task: AzureFileCopy@4
    inputs:
      sourcePath: onnxruntimecpubuild.tar
      azureSubscription: 'AI Infra Build'
      destination: azureBlob
      storage: onnxruntimeinstaller
      containerName: imagetar

  - task: CopyFiles@2
    inputs:
      contents: onnxruntimecpubuild.tar
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: imagetar
      parallel: true
      parallelCount: 8

  - template: templates/clean-agent-build-directory-step.yml
